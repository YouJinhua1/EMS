<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yjh.mapper.SysUserMapper" >
  <resultMap id="BaseResultMap" type="com.yjh.domain.SysUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="nation" property="nation" jdbcType="VARCHAR" />
    <result column="entime" property="entime" jdbcType="DATE" />
    <result column="politics_status" property="politicsStatus" jdbcType="VARCHAR" />
    <result column="id_number" property="idNumber" jdbcType="VARCHAR" />
    <result column="sdept_id" property="sdeptId" jdbcType="INTEGER" />
    <result column="major_id" property="majorId" jdbcType="INTEGER" />
    <result column="team_id" property="teamId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, number, password, salt, name, gender, age, nation, entime, politics_status, id_number, 
    sdept_id, major_id,team_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yjh.domain.SysUser" >
    insert into sys_user (id, number, password, 
      salt, name, gender, 
      age, nation, entime, politics_status, 
      id_number, sdept_id, major_id,team_id
      )
    values (#{id,jdbcType=INTEGER}, #{number,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{nation,jdbcType=VARCHAR}, #{entime,jdbcType=DATE}, #{politicsStatus,jdbcType=VARCHAR}, 
      #{idNumber,jdbcType=VARCHAR}, #{sdeptId,jdbcType=INTEGER}, #{majorId,jdbcType=INTEGER},#{teamId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yjh.domain.SysUser" useGeneratedKeys="true" keyProperty="id">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="nation != null" >
        nation,
      </if>
      <if test="entime != null" >
        entime,
      </if>
      <if test="politicsStatus != null" >
        politics_status,
      </if>
      <if test="idNumber != null" >
        id_number,
      </if>
      <if test="sdeptId != null" >
        sdept_id,
      </if>
      <if test="majorId != null" >
        major_id,
      </if>
      <if test="teamId != null" >
        team_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="nation != null" >
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="entime != null" >
        #{entime,jdbcType=DATE},
      </if>
      <if test="politicsStatus != null" >
        #{politicsStatus,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null" >
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="sdeptId != null" >
        #{sdeptId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null" >
        #{majorId,jdbcType=INTEGER},
      </if>
      <if test="teamId != null" >
        #{teamId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yjh.domain.SysUser" >
    update sys_user
    <set >
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="nation != null" >
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="entime != null" >
        entime = #{entime,jdbcType=DATE},
      </if>
      <if test="politicsStatus != null" >
        politics_status = #{politicsStatus,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null" >
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="sdeptId != null" >
        sdept_id = #{sdeptId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null" >
        major_id = #{majorId,jdbcType=INTEGER},
      </if>
      <if test="teamId != null" >
        team_id = #{majorId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yjh.domain.SysUser" >
    update sys_user
    set number = #{number,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      nation = #{nation,jdbcType=VARCHAR},
      entime = #{entime,jdbcType=DATE},
      politics_status = #{politicsStatus,jdbcType=VARCHAR},
      id_number = #{idNumber,jdbcType=VARCHAR},
      sdept_id = #{sdeptId,jdbcType=INTEGER},
      major_id = #{majorId,jdbcType=INTEGER},
      team_id = #{teamId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <select id="findUserByNumber" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where number = #{number}
  </select>
  <select id="queryUser" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    <if test="name != null and name!=''">
       where name like '%${name}%' 
    </if>
  </select>
  
  <select id="queryUserByRoleId" resultMap="BaseResultMap" parameterType="Integer" >
    select * from sys_user 
    where id in (
    	select user_id from sys_role_user 
    	where role_id=#{roleId} group by user_id
    )
  </select>
  <select id="selectUserNameById" resultType="String" parameterType="Integer" >
    select name from sys_user 
    where id=#{userId}
  </select>
  <select id="getSdeptLeader" parameterType="map" resultMap="BaseResultMap">
  	select * from sys_user 
	where id in
	(
		select user_id from sys_role_user 
		where role_id=
		(select id from sys_role where name='院系领导')
	)
  </select>
   <select id="getMajorLeader" parameterType="map" resultMap="BaseResultMap">
  	select * from sys_user 
	where id in
	(
		select user_id from sys_role_user 
		where role_id=
		(select id from sys_role where name='导员')
	)
  </select>
   <select id="getTeacher" parameterType="map" resultMap="BaseResultMap">
  	select * from sys_user 
	where id in
	(
		select user_id from sys_role_user 
		where role_id=
		(select id from sys_role where name='教师')
	)
  </select>
   <select id="selectTeacherList" parameterType="map" resultMap="BaseResultMap">
  	select * from sys_user 
	where id in
	(
		select user_id from sys_role_user 
		where role_id=
		(select id from sys_role where name='教师')
	)
  </select>  
  <select id="queryTeacherBySdeptId" parameterType="map" resultMap="BaseResultMap">
  	select * from sys_user 
	where sdept_id=#{sdeptId}
	and id in
	(
		select user_id from sys_role_user 
		where role_id=
		(select id from sys_role where name='教师')
	)
  </select>
   <select id="queryTeacherByName" parameterType="map" resultMap="BaseResultMap">
  	select * from sys_user 
	where name like '%${name}%'
	and id in 
	(
		select user_id from sys_role_user 
		where role_id=
		(select id from sys_role where name='教师')
	)
	
  </select>
   <select id="selectStudentList" parameterType="map" resultMap="BaseResultMap">
  	select * from sys_user 
	where id in
	(
		select user_id from sys_role_user 
		where role_id=
		(select id from sys_role where name='学生')
	)
  </select>  
   <select id="queryStudentByMajorId" parameterType="map" resultMap="BaseResultMap">
  	select * from sys_user 
	where major_id=#{majorId}
	and id in
	(
		select user_id from sys_role_user 
		where role_id=
		(select id from sys_role where name='学生')
	)
  </select> 
  <select id="queryStudentBySdeptId" parameterType="map" resultMap="BaseResultMap">
  	select * from sys_user 
	where sdept_id=#{sdeptId}
	and id in
	(
		select user_id from sys_role_user 
		where role_id=
		(select id from sys_role where name='学生')
	)
  </select> 
  <select id="queryStudentByTeamId" parameterType="map" resultMap="BaseResultMap">
  	select * from sys_user 
	where team_id=#{teamId}
	and id in
	(
		select user_id from sys_role_user 
		where role_id=
		(select id from sys_role where name='学生')
	)
  </select>
	<select id="queryStudentByName" parameterType="map" resultMap="BaseResultMap">
  	select * from sys_user 
	where name like '%${name}%'
	and id in
	(
		select user_id from sys_role_user 
		where role_id=
		(select id from sys_role where name='学生')
	)
  </select> 
  <insert id="batchInsertStudentSelective" parameterType="java.util.ArrayList" useGeneratedKeys="true" keyProperty="id">
  	insert into sys_user 
  	(
  		 <include refid="Base_Column_List" />
    )
 	values
  	<foreach collection="students" item="student" index="index" separator=",">
    	(
    		#{student.id}, #{student.number}, #{student.password},#{student.salt},#{student.name},
     		#{student.gender},#{student.age},#{student.nation},#{student.entime},#{student.politicsStatus},
     		#{student.idNumber},#{student.sdeptId},#{student.majorId},#{student.teamId}
     	)
  	</foreach>
  </insert>
   <select id="selectStudentListByStudentIds" parameterType="map" resultMap="BaseResultMap">
  	select * from sys_user 
	where id in
	<foreach collection="studentIds" item="id" index="index" separator=",">
    	(#{id})
   </foreach>
  </select> 

</mapper>